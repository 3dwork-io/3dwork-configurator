# Current Version v_202305021736
# Based on RatOS with some adjustments

#####
# CONFIGURATION VARIABLES
#####

[gcode_macro ECHO_3DWORK_VARS]
description: Echo 3Dwork variables to the console.
gcode:
  {% for var, value in printer["gcode_macro 3Dwork"].items() %}
    {action_respond_info(var ~ ": " ~ value)}
  {% endfor %}
  
[gcode_macro 3Dwork]
description: 3Dwork variable storage macro, will echo variables to the console when run.
# Configuration Defaults
# This is only here to make the config backwards compatible.
# Configuration should exclusively happen in printer.cfg.
variable_macro_travel_speed: 150
variable_macro_z_speed: 15
variable_pause_print_park_in: "back"
variable_end_print_park_z_hop: 20
variable_filament_unload_length: 130
variable_filament_unload_speed: 5
variable_filament_load_length: 100
variable_filament_load_speed: 10
gcode:
  ECHO_3DWORK_VARS
  
#####
# GENERAL MACROS
#####

### PAUSE
[gcode_macro PAUSE]
description: Pauses the printer
rename_existing: PAUSE_BASE
variable_extrude: 1.5
gcode:
  SAVE_GCODE_STATE NAME=PAUSE_state
  # Define park positions 
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set speed = printer["gcode_macro 3Dwork"].macro_travel_speed|float * 60 %}
  {% set z_speed = printer["gcode_macro 3Dwork"].macro_z_speed|float * 60 %}
  # Calculate safe Z position
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 20.0) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  PAUSE_BASE
  G91
  # Retract
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  # Move to park position
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F{z_speed}
    _PARK LOCATION={printer["gcode_macro 3Dwork"].pause_print_park_in} X={printer["gcode_macro 3Dwork"].pause_print_park_x}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

### RESUME
[gcode_macro RESUME]
description: Resumes the print if the printer is paused.
rename_existing: RESUME_BASE
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  # Prime
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
    G90
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  RESUME_BASE

### RESUME
[gcode_macro CANCEL_PRINT]
description: Cancels the printer
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  #SDCARD_RESET_FILE
  CANCEL_PRINT_BASE

### PARK
[gcode_macro _PARK]
gcode:
  {% set speed = printer["gcode_macro 3Dwork"].macro_travel_speed|float * 60 %}
  # Get X position
  {% if params.X != '' %}
    {% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
      {% set safe_x = params.X|float %}
    {% else %}
      {action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
      {% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
    {% endif %}
  {% else %}
    {% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
  {% endif %}
  # Get Y position
  {% if params.LOCATION|default('back')|lower == 'back' %}
    {% set y = printer.toolhead.axis_maximum.y - 5 %}
  {% elif params.LOCATION|lower == 'front' %}
    {% set y = printer.toolhead.axis_minimum.y + 5 %}
  {% elif params.LOCATION|lower == 'center' %}
    {% set y = printer.toolhead.axis_maximum.y / 2 %}
  {% endif %}
  # Absolute positioning
  G90 
  # Park
  G0 X{safe_x} Y{y} F{speed} 
