# Current Version v_202305051452
# Based on RatOS with some adjustments

#####
# GENERAL MACROS
#####

### MAYBE_HOME
[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_maybehome_error}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_maybehome_error}"
    G28
    SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
  {% else %}
    {% set axes = '' %}
    {% set isHomed = true %}
    {% set axesToHome = '' %}
    {% if params.X is defined %}
      {% set axes = axes ~ 'X ' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
    {% endif %}
    {% if params.Y is defined %}
      {% set axes = axes ~ 'Y ' %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
    {% endif %}
    {% if params.Z is defined %}
      {% set axes = axes ~ 'Z ' %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
      {% set axes = '' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if isHomed is false %}
      M117 Homing {axesToHome}
      RESPOND MSG="Homing {axesToHome}"
      G28 {axesToHome}
    {% else %}
      M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_maybehome_ok}
      RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_maybehome_ok}"
    {% endif %}
  {% endif %}

### PAUSE
[gcode_macro PAUSE]
description: Pauses the printer
rename_existing: PAUSE_BASE
variable_extrude: 1.5
gcode:
  SAVE_GCODE_STATE NAME=PAUSE_state
  # Define park positions 
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set speed = printer["gcode_macro GLOBAL_VARS"].macro_travel_speed|float * 60 %}
  {% set z_speed = printer["gcode_macro GLOBAL_VARS"].macro_z_speed|float * 60 %}
  # Calculate safe Z position
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 20.0) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  PAUSE_BASE
  G91
  # Retract
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder_temp_error}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder_temp_error}"
  {% endif %}
  # Move to park position
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F{z_speed}
    _PARK LOCATION={printer["gcode_macro GLOBAL_VARS"].pause_print_park_in} X={printer["gcode_macro GLOBAL_VARS"].pause_print_park_x}
  {% else %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_park_error}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_park_error}"
  {% endif %}

### RESUME
[gcode_macro RESUME]
description: Resumes the print if the printer is paused.
rename_existing: RESUME_BASE
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  # Prime
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
    G90
  {% else %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder_temp_error}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder_temp_error}"
  {% endif %}
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  RESUME_BASE

### CANCEL_PRINT
[gcode_macro CANCEL_PRINT]
description: Cancels the printer
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  #SDCARD_RESET_FILE
  CANCEL_PRINT_BASE

### PARK
[gcode_macro _PARK]
gcode:
  {% set speed = printer["gcode_macro GLOBAL_VARS"].macro_travel_speed|float * 60 %}
  # Get X position
  {% if params.X != '' %}
    {% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
      {% set safe_x = params.X|float %}
    {% else %}
      M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_park_error}
      RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_park_error}"
      {% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
    {% endif %}
  {% else %}
    {% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
  {% endif %}
  # Get Y position
  {% if params.LOCATION|default('back')|lower == 'back' %}
    {% set y = printer.toolhead.axis_maximum.y - 5 %}
  {% elif params.LOCATION|lower == 'front' %}
    {% set y = printer.toolhead.axis_minimum.y + 5 %}
  {% elif params.LOCATION|lower == 'center' %}
    {% set y = printer.toolhead.axis_maximum.y / 2 %}
  {% endif %}
  # Absolute positioning
  G90 
  # Park
  G0 X{safe_x} Y{y} F{speed} 
