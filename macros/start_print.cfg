#### START PRINT ####
[gcode_macro START_PRINT]
# Configure prime line - From Klipper-Adaptive-Meshing-Purging https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
variable_adaptive_enable: True      # Change to False if you'd like the purge to be in the same spot every print
variable_z_height: 0.3              # Height above the bed to purge
variable_purge_amount: 35           # Amount of filament in millimeters to purge
variable_line_length: 70            # Overall desired length of purge line in millimeters, around 1/5th of X axis length is a good starting value
variable_flow_rate: 12              # Desired flow rate in mm3/s (Around 12 for standard flow hotends, around 24 for high flow hotends)
variable_x_default: 10              # Default X location to purge. If adaptive_enable is True, this is overwritten
variable_y_default: 10              # Default Y location to purge. If adaptive_enable is True, this is overwritten
variable_distance_to_object_y: 10   # Y distance in millimeters away from the print area for purging. Must be less than or equal to y_default if adaptive_enable is False

#Configure Leveling
variable_calibrate_z_tilt: False    # If True launch z-tilt calibration process - https://3dwork.qitec.net/klipper/empezamos/nivelacion-gantry-z-tilt
variable_calibrate_bed_mesh: False  # If True create a new mesh False load default mesh - https://3dwork.qitec.net/klipper/empezamos/malla-nivelacion-de-cama-klipper

#### ECHO/DEBUG
variable_display_parameters: True   # Display macro parameters in the console, useful for debugging the SETUP_LINE_PURGE call, or more verbosity.

gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

    #Get Printer config
    {% set PROBECONFIG = printer['configfile'].config["probe"] is defined %}
    {% set BLTOUCHCONFIG = printer['configfile'].config["bltouch"] is defined %}

    {% set EXCLUDE_OBJECT = printer['configfile'].config["exclude_object"] is defined %}
    {% set Z_TILT = printer['configfile'].config["z_tilt"] is defined %}

    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

    #Set Start coordinates of priming lines
    {% set X_START = 10.0|default(10.0)|float %}
    {% set Y_START = 20.0|default(20.0)|float %}

    #Get Bed and Extruder temperature from Slicer GCode
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    {% if display_parameters %}
        { action_respond_info("Bed Temperature        : %i" % (params.BED_TEMP | int)) }
        { action_respond_info("Extruder Temperature   : %i" % (params.EXTRUDER_TEMP | int)) }
    {% endif %}

    #Get exclude_object in cofiguration klipper
    {% if adaptive_enable and not EXCLUDE_OBJECT %}
        {action_respond_info("[exclude_object] is not enabled")}
    {% endif %}

    #Preheat nozzle and bed
    M117 Pre-heating bed...
    {action_respond_info("Pre-heating bed...")}
    M140 S{BED_TEMP}

    M117 Pre-heating extruder...
    {action_respond_info("Pre-heating extruder...")}
    M104 S{EXTRUDER_TEMP}

    {% if PROBECONFIG %}
        # Wait for extruder to reach 170 so an inductive probe (if present) is at a predictable temp. 
        # Also allows the bed heat to spread a little, and softens any plastic that might be stuck to the nozzle.
        {action_respond_info("#### Waiting minimum temperature ###")}
        {% set min_temp = printer.extruder.min_extrude_temp|default(170) %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={EXTRUDER_TEMP}
    {% endif %}

    #Home
    G28

    #Z-tilt Leveling
    {% if Z_TILT %}
        {% if calibrate_z_tilt %}
            M117 Z-tilt Leveling...
            {action_respond_info("Z-tilt Leveling...")}
            Z_TILT_ADJUST
        {% endif %}
    {% else %}
        {action_respond_info("[z_tilt] is not enabled")}
    {% endif %}

    #Bed Leveling
    M117 Bed Leveling...
    {action_respond_info("Bed Leveling...")}

    {% if calibrate_bed_mesh and (BLTOUCHCONFIG or PROBECONFIG) %}
        BED_MESH_CLEAR
        BED_MESH_CALIBRATE PROFILE=default # Create a new bed mesh
        BED_MESH_PROFILE LOAD=default # Load stored bed mesh
    {% else %}
        BED_MESH_PROFILE LOAD=default # Load stored bed mesh
    {% endif %}

    {% if display_parameters %}
        BED_MESH_OUTPUT
        { action_respond_info("calibrate_sensor_type : %s" % (calibrate_sensor_type)) }
    {% endif %}

    #Move up to clean bed
    G1 Y{Y_MAX - 20} Z{Z_MAX/4.0} F6000                

    #Heat nozzle and bed
    M117 Heating bed...
    {action_respond_info("Heating bed...")}
    M190 S{BED_TEMP}

    M117 Heating Extruder...
    {action_respond_info("Heating Extruder...")}
    M109 S{EXTRUDER_TEMP} T0                       

    #Prime Line
    {% if adaptive_enable %} 
        {% if EXCLUDE_OBJECT %} 
            {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
            {% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
            {% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
            {% set x_origin = ([x_origin, 0] | max) %}
            {% set y_origin = ([y_origin, 0] | max) %}
            {% set y_origin = (y_origin - distance_to_object_y) | float %}
        {% endif %}
    {% else %}
        {action_respond_info("[exclude_object] is not enabled")}
        {% set x_origin = x_default | float %}
        {% set y_origin = y_default | float %}
    {% endif %}

    {% set max_extrude_cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    {% set z_offset = 0 %}

    {% if BLTOUCHCONFIG %}
        M117 BlTouch zoffset used...
        {action_respond_info("BlTouch zoffset used...")}
        {% set z_offset = printer.configfile.settings.bltouch.z_offset %}
    {% elif PROBECONFIG %}
        M117 Probe zoffset used...
        {action_respond_info("Probe zoffset used...")}
        {% set z_offset = printer.configfile.config.probe.z_offset %}
    {% endif %}

    {% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
    {% set cross_section = nozzle_dia * z_height | float %}
    {% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}

    {% if display_parameters %}
        { action_respond_info("adaptive_enable : %d" % (adaptive_enable)) }
        { action_respond_info("exclude_object  : %d" % (EXCLUDE_OBJECT)) }
        { action_respond_info("z_height        : %f" % (z_height)) }
        { action_respond_info("purge_amount    : %f" % (purge_amount)) }
        { action_respond_info("line_length     : %f" % (line_length)) }
        { action_respond_info("flow_rate       : %f" % (flow_rate)) }
        { action_respond_info("x_default       : %f" % (x_default)) }
        { action_respond_info("y_default       : %f" % (y_default)) }
        { action_respond_info("distance_to_object_y : %f" % (distance_to_object_y)) }

        { action_respond_info("max_extrude_cross_section : %f" % (max_extrude_cross_section)) }
        { action_respond_info("z_offset          : %f" % (z_offset)) }
        { action_respond_info("z_height          : %f" % (z_height)) }
        { action_respond_info("nozzle_dia        : %f" % (nozzle_dia)) }
        { action_respond_info("cross_section     : %f" % (cross_section)) }
        { action_respond_info("purge_move_speed  : %f" % (purge_move_speed)) }
        { action_respond_info("travel_speed      : %f" % (travel_speed)) }
        { action_respond_info("x_origin          : %f" % (x_origin)) }
        { action_respond_info("y_origin          : %f" % (y_origin)) }
    {% endif %}

    M117 Prime Line...
    {action_respond_info("Prime Line...")}

    G92 E0                                                              # Reset extruder
    G0 F{travel_speed/2}                                                # Set travel speed
    G90                                                                 # Absolute positioning
    G0 X{x_origin} Y{y_origin}                                          # Move to purge position
    G0 Z{z_height}                                                      # Move to purge Z height
    M83                                                                 # Relative extrusion mode
    G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}    # Purge line
    G1 E-.5 F2100                                                       # Retract
    G92 E0                                                              # Reset extruder distance
    M82                                                                 # Absolute extrusion mode
    G0 Z{z_height * 2} F{travel_speed}                                  # Z hop

    M117 Ready to Print...
    {action_respond_info("Ready to Print...")}

[gcode_macro SETUP_START_PRINT]
gcode:
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=calibrate_bed_mesh VALUE={params.CALIBRATE_BED_MESH|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=display_parameters VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=adaptive_enable VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=z_height VALUE={params.Z_HEIGHT|default(0.4)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=purge_amount VALUE={params.PURGE_AMOUNT|default(40)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=line_length VALUE={params.LINE_LENGTH|default(50)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(12)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=x_default VALUE={params.X_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=y_default VALUE={params.Y_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=distance_to_object_y VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}    
