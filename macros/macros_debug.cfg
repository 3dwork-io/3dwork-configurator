# Current Version v_202305051452
### DEBUG MACROS

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}
        {% endif %}

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %}

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %}

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }
                    {% endif %}
                {% endif %}

            {% endfor %}
        {% endif %}
    {% endfor %}
    
[gcode_macro SET_VARIABLE_MACRO]
gcode:  
  {% if params.MACRO is defined and params.VARIABLE is defined and params.VALUE is defined %}
    {% set variable = (params.VARIABLE).strip().lower() %}
    {% set macro = (params.MACRO).strip().upper() %}

    {% for var, value in printer["gcode_macro " ~ macro].items() %}
      {% if var|lower == variable %}

        {% set nostring = (params.VALUE).strip() %}
        {% set is_boolean = nostring|lower in ["true","false"] %} 
        {% set nostring = nostring|capitalize if is_boolean else nostring %} 

        {% if (nostring is number and value is number) or is_boolean %}
          SET_GCODE_VARIABLE MACRO={macro} VARIABLE={var} VALUE={nostring}
        {% else %}
          SET_GCODE_VARIABLE MACRO={macro} VARIABLE={var} VALUE='"{params.VALUE}"'
        {% endif %}

      {% endif %}
    {% endfor %}
  {% endif %}

[gcode_macro RANDOM_NUMBERS]
gcode:
  {% set random_float = (range(0, 235) | random) / 10 %}
  { action_respond_info("random_float          : %f" % (random_float))  }
